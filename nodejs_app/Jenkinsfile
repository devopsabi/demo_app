pipeline {
        agent any

        stages {

            stage('checkout_nodejs_app') {
                steps {
                    git branch:"master", url: '', credentialsId:'git_hub_id'
                }

            }
            
            stage('Verify if there is a change in the version'){
                steps{
                    script{
                        try {
                            sh 'diff new_version.txt current_version.txt'
                        }catch (Exception e){
                            difference = false
                        }
                    }
                }
            
            }
            
            


         stage('build docker image nodejs_app'){
         if(difference){ 
                steps {
                    script{
                        
                        try {
                            withDockerRegistry(url:'',credentialsId:'docker_hub_id'){
                            docker.build('devopsabi/demo_app:'+currentBuild.number).push()
                            
                             }
                        
                        }catch (Exception e){
                        testPassed = false
                        }
                    }
                }
            }   
         }
        
	    stage('Deploy new version') {
        if(testPassed){
            	steps {
                	retry(3) {
                  	  sh 'docker service update --image devopsabi/demo_app:+currentBuild.number demo_app'
               		 }

                	timeout(time: 3, unit: 'MINUTES') {
                    		sh './health-check.sh'
               		 }
            	}
	    }
    }
        
    }
}
